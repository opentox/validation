{
    "swagger": "2.0",
    "info": {
        "description": "An OpenTox REST Webservice for validation and reporting\n",
        "version": "1.0.0",
        "title": "OpenTox Validation",
        "contact": {
            "name": "Martin Guetlein, Christoph Helma"
        },
        "license": {
            "name": "GNU GENERAL PUBLIC LICENSE",
            "url": "https://github.com/opentox/validation/blob/master/LICENSE"
        }
    },
    "host": "enm.in-silico.ch",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "paths": {
        "/validation": {
            "head": {
                "tags": [
                    "validation"
                ],
                "description": "for service check",
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "get": {
                "tags": [
                    "validation"
                ],
                "description": "Get a list of all validations",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "header",
                        "description": "requested Content-Type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "text/uri-list",
                            "text/turtle",
                            "text/plain",
                            "text/html",
                            "application/rdf+xml",
                            "application/sparql-results+xml"
                        ]
                    },
                    {
                        "$ref": "#/parameters/subjectid"
                    }
                ],
                "produces": [
                    "text/uri-list",
                    "text/turtle",
                    "text/plain",
                    "text/html",
                    "application/rdf+xml",
                    "application/sparql-results+xml"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/validation/test_set_validation": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "validation"
                ],
                "description": "Validates a model on a test dataset",
                "produces": [
                    "application/rdf+xml",
                    "application/x-yaml",
                    "text/html",
                    "text/uri-list"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/subjectid"
                    },
                    {
                        "name": "model_uri",
                        "description": "model URI",
                        "type": "string",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "name": "test_dataset_uri",
                        "description": "test dataset URI",
                        "type": "string",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "name": "test_target_dataset_uri",
                        "description": "test target dataset URI (default=test_dataset_uri)",
                        "type": "string",
                        "in": "formData",
                        "required": false
                    },
                    {
                        "name": "prediction_feature",
                        "description": "prediction feature URI (default= dependent variable of model)",
                        "type": "string",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "202": {
                        "$ref": "#/responses/202"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    },
                    "500": {
                        "$ref": "#/responses/500"
                    }
                }
            }
        }
    },
    "parameters": {
        "subjectid": {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token",
            "required": true,
            "type": "string"
        }
    },
    "responses": {
        "200": {
            "description": "OK"
        },
        "202": {
            "description": "Accepted"
        },
        "400": {
            "description": "Bad Request"
        },
        "401": {
            "description": "Unauthorized"
        },
        "404": {
            "description": "Resource Not Found"
        },
        "500": {
            "description": "Server Error"
        }
    },
    "tags": [
        {
            "name": "validation",
            "description": "Validation service"
        }
    ]
}